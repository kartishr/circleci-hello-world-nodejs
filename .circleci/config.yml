jobs:
  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
        default: thri
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - kubernetes/install
      - run: ls && pwd && cd containers && echo $CIRCLE_SHA1 && sed -i -e "s/latest/${CIRCLE_SHA1}/g" kube.yml && cat kube.yml && kubectl apply -f kube.yml
      - run:
          command: |
            kubectl get all -n poc
          name: Test Cluster
version: 2.1
orbs:
  aws-eks: circleci/aws-eks@0.2.0
  aws-ecr: circleci/aws-ecr@3.1.0
  kubernetes: circleci/kubernetes@0.3.0
workflows:
  deployment:
    jobs:
      - aws-ecr/build_and_push_image:
          name: build-and-push-nginx-image
          account-url: AWS_ECR_URL
          region: AWS_DEFAULT_REGION
          repo: nginx
          dockerfile: ~/project/containers/nginx/Dockerfile
          path: ~/project/containers/nginx
          tag: ${CIRCLE_SHA1}
      - aws-ecr/build_and_push_image:
          name: build-and-push-python-image
          account-url: AWS_ECR_URL
          region: AWS_DEFAULT_REGION
          repo: python
          dockerfile: ~/project/containers/python/Dockerfile
          path: ~/project/containers/python
          tag: ${CIRCLE_SHA1}
      - aws-ecr/build_and_push_image:
          name: build-and-push-nodejs-image
          account-url: AWS_ECR_URL
          region: AWS_DEFAULT_REGION
          repo: nodejs
          dockerfile: ~/project/containers/nodejs/Dockerfile
          path: ~/project/containers/nodejs
          tag: ${CIRCLE_SHA1}
      - test-cluster:
          cluster-name: thri
            - build-and-push-nginx-image
            - build-and-push-python-image
            - build-and-push-nodejs-image
